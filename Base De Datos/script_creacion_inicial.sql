USE GD1C2019
GO

-- Verifico si existe el schema, si no existe lo creo

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'ICE_CUBES')
	BEGIN
		EXEC sys.sp_executesql N'CREATE SCHEMA [ICE_CUBES] AUTHORIZATION [gdCruceros2019]'
		--PRINT 'Schema correctamente creado'
	END
GO

IF(OBJECT_ID('ICE_CUBES.crear_tablas') IS NOT NULL)
	DROP PROCEDURE ICE_CUBES.crear_tablas
GO

CREATE PROCEDURE ICE_CUBES.CREAR_TABLAS
AS
/************************** INI-BORRADO DE TABLAS***************************/
	BEGIN
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.Rol_Funcionalidad'))
		DROP TABLE ICE_CUBES.Rol_Funcionalidad
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.Funcionalidad'))
		DROP TABLE ICE_CUBES.Funcionalidad
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.USUARIO'))
		DROP TABLE ICE_CUBES.USUARIO
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.Rol'))
		DROP TABLE ICE_CUBES.Rol
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.PASAJE'))
		DROP TABLE ICE_CUBES.PASAJE
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.COMPRA'))
		DROP TABLE ICE_CUBES.COMPRA
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.RESERVA'))
		DROP TABLE ICE_CUBES.RESERVA
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.CLIENTE'))
		DROP TABLE ICE_CUBES.CLIENTE
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.TRAMO_SIMPLE'))
		DROP TABLE ICE_CUBES.TRAMO_SIMPLE
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.TRAMO_COMPUESTO'))
		DROP TABLE ICE_CUBES.TRAMO_COMPUESTO
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.PUERTO'))
		DROP TABLE ICE_CUBES.PUERTO
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.CABINA'))
		DROP TABLE ICE_CUBES.CABINA
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.TIPO_CABINA'))
		DROP TABLE ICE_CUBES.TIPO_CABINA
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.VIAJE'))
		DROP TABLE ICE_CUBES.VIAJE
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.RECORRIDO'))
		DROP TABLE ICE_CUBES.RECORRIDO
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ICE_CUBES.CRUCERO'))
		DROP TABLE ICE_CUBES.CRUCERO

/************************** FIN-BORRADO DE TABLAS***************************/
/************************** INI-CREACION DE TABLAS***************************/
	CREATE TABLE ICE_CUBES.Rol (
		ROL_ID NUMERIC(18,0) IDENTITY(1,1) NOT NULL,
		ROL_DESCRIPCION NVARCHAR(255) NOT NULL,
		ROL_ESTADO BIT NOT NULL DEFAULT 1, 
			PRIMARY KEY (ROL_ID)
	);

	CREATE TABLE ICE_CUBES.Funcionalidad (
		FUNCION_ID NUMERIC(18,0) IDENTITY(1,1)  NOT NULL,
		FUNCION_NOMBRE NVARCHAR(255) NOT NULL,
			PRIMARY KEY (FUNCION_ID)
	)

	CREATE TABLE ICE_CUBES.Rol_Funcionalidad (
		--Rol_Funcionalidad_ID NUMERIC(18,0) IDENTITY(1,1),
		ID_rol NUMERIC(18,0) NOT NULL, 
		ID_funcionalidad NUMERIC(18,0) NOT NULL,
		--	PRIMARY KEY(Rol_Funcionalidad_ID)
	)	
	
	CREATE TABLE ICE_CUBES.USUARIO (
		USERDNI_ID DECIMAL(18,0) PRIMARY KEY NOT NULL,
		USER_TIPO CHAR (2) NOT NULL,
		USER_PASS NVARCHAR(255) NOT NULL,
		USER_ROL NUMERIC (18,0) NOT NULL,
		USER_ESTADO TINYINT	NOT NULL DEFAULT 0,
		USER_INTENTOS TINYINT NOT NULL DEFAULT 0,
		)
	
	CREATE TABLE iCE_CUBES.CLIENTE (
		CLIE_DNIID DECIMAL(18,0) PRIMARY KEY NOT NULL,
		CLIE_NOMBRE NVARCHAR(255) NOT NULL,
		CLIE_APELLIDO NVARCHAR(255) NOT NULL,
		CLI_DIR NVARCHAR(255) NOT NULL,
		CLI_TELEFONO INT,
		CLI_MAIL NVARCHAR(255),
		CLI_FECHA_NAC DATETIME2(3)
		)

	
	CREATE TABLE ICE_CUBES.COMPRA(
		COMPRA_ID DECIMAL(18,0) IDENTITY(1,1)PRIMARY KEY  NOT NULL,
		COMPRA_RESERVA_ID DECIMAL(18,0),
		COMPRA_CLIENTE DECIMAL(18,0),
		)
	
	CREATE TABLE ICE_CUBES.RESERVA ( 
		RESERVA_ID DECIMAL(18,0) IDENTITY(1,1) PRIMARY KEY NOT NULL,
		RESERVA_FECHA DATETIME2(3) NOT NULL,
		RESERVA_CLIENTE DECIMAL (18,0)
	)	
	
	CREATE TABLE ICE_CUBES.PUERTO(
		PUERTO_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
		PUERTO_NOMBRE NVARCHAR(255),
		PUERTO_ESTADO BIT NOT NULL
		)

	CREATE TABLE ICE_CUBES.RECORRIDO(
		RECO_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
		RECO_TIPO CHAR (1) NOT NULL,
		RECO_ESTADO BIT NOT NULL,  
	)

	CREATE TABLE ICE_CUBES.TRAMO_SIMPLE (
		SIMP_RECO_ID INT PRIMARY KEY  NOT NULL,
		SIMP_ORIGEN INT,
		SIMP_DESTINO INT,
		SIMP_PRECIO DECIMAL (18,2)
	)

	CREATE TABLE ICE_CUBES.TRAMO_COMPUESTO (
		COMP_RECO_ID INT NOT NULL,
		COMP_SIMPLE INT )
	
	CREATE TABLE ICE_CUBES.CRUCERO (
		CRUCERO_ID INT IDENTITY (1,1) PRIMARY KEY  NOT NULL,
		CRUCERO_MODELO NVARCHAR(50),
		CRUCERO_IDENTIFICADOR  NVARCHAR(50),
		CRUCERO_MARCA NVARCHAR(255),
		CRUERO_TIPO_SERVICIO NVARCHAR(50),
		CRUCERO_ESTADO BIT ,
		CRUCERO_FALTA DATETIME2(3),
		CRUCERO_FFUERA_SERVICIO DATETIME2(3),
		CRUCERO_FREINICIO DATETIME2(3),
		CRUCERO_BAJA_DEF DATETIME2(3),
	)

	CREATE TABLE ICE_CUBES.CABINA(
		CABINA_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
		CABINA_CRUCERO_ID INT, --FK CRUCERO
		CABINA_PISO DECIMAL(18,0),
		CABINA_NUMERO DECIMAL (18,0),
		CABINA_TIPO INT --FK TIPO CABINA
		)

	CREATE TABLE ICE_CUBES.TIPO_CABINA(
		TIPO_CABINA INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
		TIPO_NOMBRE NVARCHAR (50)
		)

	CREATE TABLE ICE_CUBES.VIAJE (
		VIAJE_ID INT IDENTITY(1,1) PRIMARY KEY  ,
		VIAJE_CRUCERO_ID INT,--FK CRUCERO
		VIAJE_RECORRIDO_ID INT, -- FK RECORRIDO
		VIAJE_FINICIO DATETIME,
		VIAJE_FFIN DATETIME
	)

	CREATE TABLE ICE_CUBES.PASAJE(
		PASAJE_VIAJE_ID INT PRIMARY KEY , --PK/FK VIAJE
		PASAJE_CABINA_ID INT , -- PK/FK CABINA
		PASAJE_PRECIO DECIMAL (18,2),
		PASAJE_COMPRA_ID DECIMAL(18,0), --FK COMPRA
		PASAJE_RESERVA_ID DECIMAL(18,0) --FK RESERVA
		)

		
-- Creacion de FKs
	ALTER TABLE ICE_CUBES.Rol_Funcionalidad WITH CHECK ADD
	CONSTRAINT FK_Rol_Funcionalidad_Funcionalidad FOREIGN KEY (ID_FUNCIONALIDAD) REFERENCES ICE_CUBES.FUNCIONALIDAD(FUNCION_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE,
	CONSTRAINT FK_RID_ROl_Funcionalidad_ROL FOREIGN KEY (ID_ROL) REFERENCES ICE_CUBES.ROL (ROL_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE

	ALTER TABLE ICE_CUBES.USUARIO WITH CHECK ADD
	CONSTRAINT FK_USUARIO_ROL FOREIGN KEY (USER_ROL) REFERENCES ICE_CUBES.ROL (ROL_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE

	ALTER TABLE ICE_CUBES.COMPRA WITH CHECK ADD
	CONSTRAINT FK_COMPRA_CLIENTE FOREIGN KEY (COMPRA_CLIENTE) REFERENCES ICE_CUBES.CLIENTE (CLIE_DNIID)
	ON DELETE NO ACTION ON UPDATE CASCADE,
	CONSTRAINT FK_COMPRA_RESERVA FOREIGN KEY (COMPRA_RESERVA_ID) REFERENCES ICE_CUBES.RESERVA(RESERVA_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE

	ALTER TABLE ICE_CUBES.RESERVA WITH CHECK ADD
	CONSTRAINT FK_RESERVA_CLIENTE FOREIGN KEY (RESERVA_CLIENTE) REFERENCES ICE_CUBES.CLIENTE (CLIE_DNIID)

	ALTER TABLE ICE_CUBES.PASAJE WITH CHECK ADD
	CONSTRAINT FK_PASAJE_VIAJE FOREIGN KEY (PASAJE_VIAJE_ID) REFERENCES ICE_CUBES.VIAJE (VIAJE_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE,
	CONSTRAINT FK_PASAJE_COMPRA FOREIGN KEY (PASAJE_COMPRA_ID) REFERENCES ICE_CUBES.COMPRA (COMPRA_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE,
	CONSTRAINT FK_PASAJE_RESERVA FOREIGN KEY (PASAJE_RESERVA_ID) REFERENCES ICE_CUBES.RESERVA (RESERVA_ID)


	ALTER TABLE ICE_CUBES.VIAJE WITH CHECK ADD
	CONSTRAINT FK_VIAJE_CRUCERO FOREIGN KEY (VIAJE_CRUCERO_ID) REFERENCES ICE_CUBES.CRUCERO (CRUCERO_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE,
	CONSTRAINT FK_VIAJE_RECORRIDO FOREIGN KEY (VIAJE_RECORRIDO_ID) REFERENCES ICE_CUBES.RECORRIDO (RECO_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE

	ALTER TABLE ICE_CUBES.CABINA WITH CHECK ADD
	CONSTRAINT FK_CABINA_CRUCERO FOREIGN KEY (CABINA_CRUCERO_ID) REFERENCES ICE_CUBES.CRUCERO (CRUCERO_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE,
	CONSTRAINT FK_CABINA_TIPO FOREIGN KEY (CABINA_TIPO) REFERENCES ICE_CUBES.TIPO_CABINA (TIPO_CABINA)
	ON DELETE NO ACTION ON UPDATE CASCADE
	--vALIDAR
	ALTER TABLE ICE_CUBES.TRAMO_SIMPLE	 WITH CHECK ADD
	CONSTRAINT FK_TSIMPLE_RECORRIDO FOREIGN KEY (SIMP_RECO_ID) REFERENCES ICE_CUBES.RECORRIDO (RECO_ID),
	CONSTRAINT FK_TSIMPLE_ORIGEN FOREIGN KEY (SIMP_ORIGEN) REFERENCES ICE_CUBES.PUERTO (PUERTO_ID),
	CONSTRAINT FK_TSIMPLE_DESTINO FOREIGN KEY (SIMP_DESTINO) REFERENCES ICE_CUBES.PUERTO (PUERTO_ID)

	ALTER TABLE ICE_CUBES.TRAMO_COMPUESTO WITH CHECK ADD
	CONSTRAINT FK_TCOMPUESTO_RECORRIDO FOREIGN KEY (COMP_RECO_ID) REFERENCES ICE_CUBES.RECORRIDO (RECO_ID)
	ON DELETE NO ACTION ON UPDATE CASCADE

	
END
/************************** FIN-CREACION DE TABLAS***************************/




GO


/************************** EJEC PROCEDURES***************************/

EXEC ICE_CUBES.CREAR_TABLAS